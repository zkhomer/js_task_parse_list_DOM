{"version":3,"sources":["scripts/main.js"],"names":["employees","document","querySelectorAll","listResult","querySelector","sortList","list","sort","a","b","dataset","salary","split","join","replace","append","getEmployees","map","element","name","innerHTML","trim"],"mappings":";AAAA,aAwBA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,KAAA,GAAA,GAAA,OAAA,sBAAA,CAAA,IAAA,EAAA,OAAA,sBAAA,GAAA,IAAA,EAAA,EAAA,OAAA,SAAA,GAAA,OAAA,OAAA,yBAAA,EAAA,GAAA,cAAA,EAAA,KAAA,MAAA,EAAA,GAAA,OAAA,EAAA,SAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,UAAA,OAAA,IAAA,CAAA,IAAA,EAAA,MAAA,UAAA,GAAA,UAAA,GAAA,GAAA,EAAA,EAAA,EAAA,OAAA,IAAA,GAAA,QAAA,SAAA,GAAA,EAAA,EAAA,EAAA,EAAA,MAAA,OAAA,0BAAA,OAAA,iBAAA,EAAA,OAAA,0BAAA,IAAA,EAAA,OAAA,IAAA,QAAA,SAAA,GAAA,OAAA,eAAA,EAAA,EAAA,OAAA,yBAAA,EAAA,MAAA,OAAA,EAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,KAAA,EAAA,OAAA,eAAA,EAAA,EAAA,CAAA,MAAA,EAAA,YAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,GAAA,EAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAtBA,IAAMA,EAAgBC,EAAAA,SAASC,iBAAiB,OAC1CC,EAAaF,SAASG,cAAc,MAEpCC,EAAW,SAACC,GAChBA,EAAKC,KAAK,SAACC,EAAGC,GACX,OAACA,EAAEC,QAAQC,OAAOC,MAAM,KAAKC,KAAK,IAAIC,QAAQ,IAAK,KAChDN,EAAEE,QAAQC,OAAOC,MAAM,KAAKC,KAAK,IAAIC,QAAQ,IAAK,MAGxDX,EAAWY,OAAXZ,MAAAA,EAAqBG,EAAAA,KAGjBU,EAAe,SAACV,GACbA,OAAAA,EAAKW,IAAI,SAAAC,GAAO,OAAA,EAAA,CAEnBC,KAAMD,EAAQE,UAAUC,QACrBH,EAAQR,YAKjBL,EAASL,GACTgB,EAAahB","file":"main.7ba7d417.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nconst employees = [...document.querySelectorAll('li')];\nconst listResult = document.querySelector('ul');\n\nconst sortList = (list) => {\n  list.sort((a, b) =>\n    (+b.dataset.salary.split(',').join('').replace('$', ''))\n    - (+a.dataset.salary.split(',').join('').replace('$', ''))\n  );\n\n  listResult.append(...list);\n};\n\nconst getEmployees = (list) => {\n  return list.map(element => (\n    {\n      name: element.innerHTML.trim(),\n      ...element.dataset,\n    }\n  ));\n};\n\nsortList(employees);\ngetEmployees(employees);\n"]}